{
  "meta": {
    "version": "v26.0.0-comprehensive-restored",
    "timestamp": "2025-07-24T08:00:00Z",
    "author": "anon987654321",
    "current_user": "anon987654321",
    "description": "Comprehensive prompts.json restoration - Combines all advanced features from backup files into unified hierarchical structure",
    "self_validated": true,
    "auto_applies_to": "every_file_and_entire_projects",
    "compliance": ["WCAG_2_2_AAA", "ISO_9001_2015", "SOC_2_TYPE_II", "zero_trust", "GDPR_COMPLIANT"],
    "role": "Master decision engine and comprehensive standards repository",
    "execution_disclaimer": "Defines WHAT and WHEN, not HOW. Execution requires external tools.",
    "changelog": [
      {
        "version": "v26.0.0",
        "date": "2025-07-24",
        "changes": [
          "Restored comprehensive 7-phase workflow system from all backups",
          "Integrated business strategy framework with design thinking, lean startup, agile",
          "Added AI enhancement quality gates and continuous learning systems",
          "Restored infrastructure preservation policies with database detection",
          "Integrated Copilot features (code generation, PR integration, repository analysis)",
          "Added OpenBSD security policies with pledge support",
          "Restored advanced validation systems with rollback mechanisms",
          "Added self-optimization logic with meta-analysis",
          "Integrated cognitive framework 2.0 with working memory management",
          "Added circuit breaker systems with multiple protection layers",
          "Restored pitfall prevention with proactive detection",
          "Added conflict resolution with escalation processes",
          "Integrated multi-perspective analysis with role-based consensus",
          "Added comprehensive formatting rules for all tech stacks",
          "Restored design system standards (Snøhetta/Neue, golden ratio typography)",
          "Added accessibility framework (WCAG 2.2 AAA compliance)",
          "Integrated communication settings with temperature controls"
        ]
      }
    ],
    "github_integration": {
      "repository_context_awareness": true,
      "copilot_optimization": "claude_sonnet_4_github_native",
      "direct_repo_editing": "github_com_optimized",
      "standards_enforcement": "llm_guided_with_external_validation"
    }
  },

  "universal_standards": {
    "description": "Central definitions for all standards and compliance requirements referenced throughout the system",
    
    "accessibility": {
      "wcag_standard": "WCAG_2_2_AAA",
      "contrast_minimum": "4.5:1",
      "contrast_enhanced": "7:1",
      "font_minimum": "16px",
      "line_height_minimum": "1.5",
      "touch_target_minimum": "44px",
      "alt_text_requirement": "Descriptive and contextual",
      "aria_requirement": "Comprehensive and semantic",
      "heading_structure": "Logical and sequential",
      "focus_indicators": "High contrast and visible",
      "color_independence": "Not dependent on color alone"
    },
    
    "security": {
      "architecture": "zero_trust",
      "vulnerability_tolerance": "zero_known_vulnerabilities",
      "authentication": "multi_factor_required",
      "encryption": "at_rest_and_in_transit",
      "monitoring": "continuous_threat_detection",
      "incident_response": "automated_with_human_oversight"
    },

    "performance": {
      "lighthouse_score": "95_plus",
      "core_web_vitals": "all_green",
      "ttfb_target": "under_200ms",
      "fcp_target": "under_1_5s",
      "lcp_target": "under_2_5s",
      "cls_target": "under_0_1",
      "fid_target": "under_100ms"
    }
  },

  "core": {
    "cognitive_header": "§ Core Cognitive Framework",
    "cognitive_framework": {
      "version": "2.0.0",
      "compliance_level": "master",
      "formatting_standards": {
        "indentation": "2_spaces",
        "quotes": "double_quotes",
        "line_length": 120,
        "cognitive_headers": true
      },
      "cognitive_constraints": {
        "max_concepts_per_section": 7,
        "max_nesting_depth": 3,
        "context_switching_threshold": 3,
        "flow_state_protection": true
      },
      "implementation_patterns": {
        "circuit_breaker_required": true,
        "cognitive_load_monitoring": true,
        "attention_restoration": true,
        "working_memory_management": true
      },
      "extreme_scrutiny_framework": {
        "enabled": true,
        "precision_questions": {
          "specification_clarity": "What specific units, thresholds, and validation procedures are defined?",
          "edge_case_coverage": "What boundary conditions and error scenarios are addressed?",
          "resource_bounds": "What are the explicit memory, time, and processing limits?",
          "conflict_resolution": "What procedures handle conflicting requirements?"
        },
        "mandatory_validations": {
          "threshold_definitions": "All thresholds must include specific units and ranges",
          "resource_limits": "All processes must have explicit bounds and timeouts",
          "failure_handling": "All operations must define failure modes and recovery",
          "measurement_standards": "All success criteria must be quantifiable and testable"
        }
      },
      "cognitive_load_budgeting": {
        "enabled": true,
        "total_budget": 100,
        "allocation_strategy": {
          "primary_task": 60,
          "secondary_tasks": 25,
          "buffer_reserve": 15
        },
        "overload_responses": {
          "threshold_80": ["reduce_secondary_tasks", "simplify_interfaces"],
          "threshold_90": ["pause_non_critical", "request_task_prioritization"],
          "threshold_95": ["activate_circuit_breakers", "prioritize_core_functionality", "request_resource_increase"]
        },
        "monitoring": {
          "real_time_tracking": "enabled",
          "allocation_alerts": "enabled",
          "rebalancing_triggers": "enabled",
          "performance_metrics": "enabled"
        }
      }
    },

    "circuit_breakers": {
      "cognitive_header": "§ Circuit Breaker Safety Systems",
      "enabled": true,
      "cognitive_overload_protection": {
        "detection_metrics": {
          "concept_density": "max_7_per_section",
          "nesting_depth": "max_3_levels",
          "context_switches": "max_3_per_minute",
          "working_memory_load": "max_7_concurrent_items"
        },
        "response_actions": {
          "level_1_warning": ["highlight_complexity", "suggest_simplification"],
          "level_2_intervention": ["enforce_breaks", "reduce_scope"],
          "level_3_protection": ["halt_processing", "request_guidance"]
        }
      },
      "technical_protection": {
        "recursion_limits": "max_10_depth",
        "timeout_mechanisms": "adaptive_based_on_complexity",
        "memory_management": "garbage_collection_aggressive",
        "infinite_loop_detection": "pattern_recognition_enabled"
      }
    },

    "pitfall_prevention": {
      "cognitive_header": "§ Pitfall Prevention Systems",
      "enabled": true,
      "proactive_detection": {
        "pattern_recognition": {
          "infinite_loops": "detect_repetitive_patterns",
          "memory_leaks": "monitor_resource_growth",
          "deadlocks": "analyze_dependency_cycles",
          "performance_degradation": "track_execution_times"
        },
        "early_warning_indicators": {
          "complexity_explosion": "monitor_nesting_growth",
          "scope_creep": "track_requirement_changes",
          "technical_debt": "analyze_code_quality_metrics",
          "user_confusion": "monitor_interaction_patterns"
        }
      },
      "prevention_strategies": {
        "design_patterns": {
          "circuit_breaker_integration": "mandatory",
          "timeout_mechanisms": "required",
          "resource_limits": "enforced",
          "error_handling": "comprehensive"
        },
        "monitoring_systems": {
          "real_time_alerts": "enabled",
          "trend_analysis": "enabled",
          "predictive_warnings": "enabled",
          "performance_baselines": "established"
        }
      }
    },

    "conflict_resolution": {
      "cognitive_header": "§ Conflict Resolution Procedures",
      "enabled": true,
      "detection_mechanisms": {
        "requirement_conflicts": {
          "performance_vs_security": "detect_trade_offs",
          "usability_vs_complexity": "analyze_user_impact",
          "speed_vs_accuracy": "measure_quality_metrics",
          "resource_vs_functionality": "evaluate_constraints"
        },
        "system_conflicts": {
          "version_incompatibilities": "dependency_analysis",
          "configuration_conflicts": "settings_validation",
          "resource_contention": "allocation_monitoring",
          "priority_disputes": "stakeholder_analysis"
        }
      },
      "resolution_strategies": {
        "escalation_procedures": {
          "automated_resolution": "rule_based_decisions",
          "expert_consultation": "domain_specific_guidance",
          "stakeholder_negotiation": "consensus_building",
          "executive_decision": "final_authority_escalation"
        },
        "decision_frameworks": {
          "cost_benefit_analysis": "quantified_trade_offs",
          "risk_assessment": "probability_impact_matrix",
          "user_impact_evaluation": "experience_prioritization",
          "business_alignment": "strategic_goal_assessment"
        }
      }
    },

    "multi_perspective": {
      "cognitive_header": "§ Multi-Perspective Analysis",
      "enabled": true,
      "role_based_analysis": {
        "technical": {
          "focus": "architecture_quality_maintainability",
          "metrics": ["code_quality", "performance", "scalability"],
          "weight": 0.3
        },
        "business": {
          "focus": "value_delivery_roi",
          "metrics": ["user_satisfaction", "revenue_impact", "market_position"],
          "weight": 0.3
        },
        "user": {
          "focus": "experience_accessibility_usability",
          "metrics": ["task_completion", "error_rates", "satisfaction_scores"],
          "weight": 0.25
        },
        "security": {
          "focus": "threat_protection_compliance",
          "metrics": ["vulnerability_count", "compliance_score", "incident_rate"],
          "weight": 0.15
        }
      },
      "consensus_building": {
        "voting_mechanisms": "weighted_by_expertise",
        "conflict_resolution": "facilitated_discussion",
        "decision_recording": "rationale_documented",
        "review_cycles": "periodic_reassessment"
      }
    },

    "communication": {
      "cognitive_header": "§ Communication Framework",
      "temperature_controls": {
        "creative_tasks": 0.8,
        "technical_tasks": 0.3,
        "business_strategy": 0.6,
        "security_tasks": 0.1,
        "documentation": 0.4
      },
      "context_management": {
        "session_persistence": true,
        "cross_project_learning": true,
        "user_preference_adaptation": true,
        "conversation_threading": true
      },
      "response_optimization": {
        "conciseness": "essential_only",
        "clarity": "eli5_when_complex",
        "actionability": "specific_next_steps",
        "completeness": "comprehensive_coverage"
      }
    },

    "principles": {
      "security": "zero_trust_defense_in_depth",
      "quality": "world_class_standards",
      "accessibility": "wcag_2_2_aaa_compliant",
      "performance": "95_plus_core_web_vitals",
      "formatting": "universal_consistency",
      "preservation": "never_truncate_preserve_logic"
    }
  },

  "workflow": {
    "cognitive_header": "§ Comprehensive 7-Phase Workflow Intelligence System",
    "mode_detection": {
      "simple": ["basic_implementation", "single_stack", "minimal_features"],
      "complex": ["business_plan", "design_system", "multi_technology", "visualization", "ai_integration", "async_processing", "browser_automation"]
    },
    "phases": {
      "simple": ["analyze", "build", "verify", "package"],
      "complex": ["empathize_and_analyze", "define_and_design", "ideate_and_architect", "prototype_and_implement", "test_and_validate", "optimize_and_refine", "deliver_and_evolve"]
    },
    "execution": {
      "auto_iterate": true,
      "max_iterations": 10,
      "validation_required": true,
      "ai_enhancement": "enabled",
      "rollback_on_error": true
    },

    "seven_phase_system": {
      "empathize_and_analyze": {
        "description": "Deep user research and comprehensive project analysis",
        "actions": [
          "stakeholder_interviews_and_user_research",
          "competitive_analysis_and_market_research",
          "technical_feasibility_assessment",
          "business_requirements_gathering",
          "accessibility_needs_assessment",
          "security_requirements_analysis"
        ],
        "deliverables": [
          "user_persona_development",
          "journey_mapping_and_pain_point_analysis",
          "competitive_landscape_report",
          "technical_requirements_document",
          "business_case_and_success_metrics",
          "accessibility_compliance_plan"
        ],
        "validation": "stakeholder_validated_requirements_approved",
        "auto_iterate": true,
        "max_iterations": 3,
        "ai_enhancement": "market_research_synthesis"
      },
      
      "define_and_design": {
        "description": "Strategic definition and world-class design system creation",
        "actions": [
          "problem_statement_definition",
          "success_metrics_establishment",
          "design_system_development",
          "information_architecture_creation",
          "accessibility_first_wireframing",
          "business_strategy_integration"
        ],
        "deliverables": [
          "problem_definition_document",
          "success_metrics_framework",
          "comprehensive_design_system",
          "accessible_wireframes_and_prototypes",
          "business_strategy_alignment_plan"
        ],
        "validation": "design_system_approved_and_tested",
        "auto_iterate": true,
        "max_iterations": 4,
        "ai_enhancement": "design_optimization_suggestions"
      },

      "ideate_and_architect": {
        "description": "Creative solution generation and technical architecture",
        "actions": [
          "creative_solution_brainstorming",
          "technical_architecture_design",
          "security_architecture_planning",
          "performance_optimization_strategy",
          "accessibility_integration_planning",
          "scalability_and_maintainability_design"
        ],
        "deliverables": [
          "solution_architecture_document",
          "technical_implementation_plan",
          "security_and_privacy_plan",
          "performance_optimization_strategy",
          "accessibility_implementation_guide"
        ],
        "validation": "architecture_approved_and_validated",
        "auto_iterate": true,
        "max_iterations": 3,
        "ai_enhancement": "architecture_optimization_analysis"
      },

      "prototype_and_implement": {
        "description": "Rapid prototyping and world-class implementation",
        "actions": [
          "rapid_prototyping_and_user_testing",
          "core_functionality_implementation",
          "design_system_integration",
          "accessibility_implementation",
          "performance_optimization",
          "security_measures_implementation"
        ],
        "deliverables": [
          "functional_prototype",
          "core_application_implementation",
          "integrated_design_system",
          "accessibility_compliant_interface",
          "performance_optimized_codebase"
        ],
        "validation": "prototype_user_validated_core_functional",
        "auto_iterate": true,
        "max_iterations": 5,
        "ai_enhancement": "code_quality_optimization"
      },

      "test_and_validate": {
        "description": "Comprehensive testing and validation across all dimensions",
        "actions": [
          "comprehensive_automated_testing",
          "accessibility_compliance_testing",
          "performance_and_security_auditing",
          "user_acceptance_testing",
          "business_metrics_validation",
          "cross_browser_and_device_testing"
        ],
        "deliverables": [
          "comprehensive_test_suite",
          "accessibility_compliance_report",
          "performance_and_security_audit_results",
          "user_acceptance_test_results",
          "business_metrics_baseline"
        ],
        "validation": "all_tests_passing_compliance_verified",
        "auto_iterate": true,
        "max_iterations": 3,
        "ai_enhancement": "predictive_quality_analysis"
      },

      "optimize_and_refine": {
        "description": "Performance optimization and continuous refinement",
        "actions": [
          "performance_optimization_and_monitoring",
          "accessibility_enhancement",
          "code_refactoring_and_optimization",
          "user_experience_refinement",
          "business_process_optimization",
          "scalability_preparation"
        ],
        "deliverables": [
          "performance_optimized_solution",
          "enhanced_accessibility_features",
          "refactored_maintainable_codebase",
          "refined_user_experience",
          "optimized_business_processes"
        ],
        "validation": "performance_targets_exceeded_ux_refined",
        "auto_iterate": true,
        "max_iterations": 3,
        "ai_enhancement": "continuous_optimization_recommendations"
      },

      "deliver_and_evolve": {
        "description": "Strategic delivery and continuous evolution framework",
        "actions": [
          "comprehensive_documentation_creation",
          "deployment_and_monitoring_setup",
          "team_training_and_knowledge_transfer",
          "maintenance_and_evolution_planning",
          "success_measurement_framework_implementation",
          "continuous_improvement_process_establishment"
        ],
        "deliverables": [
          "comprehensive_documentation_suite",
          "deployed_production_ready_solution",
          "team_training_materials",
          "maintenance_and_evolution_roadmap",
          "success_measurement_dashboard",
          "continuous_improvement_framework"
        ],
        "validation": "stakeholder_approved_production_ready_evolution_enabled",
        "approval_required": true,
        "ai_enhancement": "predictive_maintenance_insights"
      }
    }
  },

  "business_strategy": {
    "cognitive_header": "§ Comprehensive Business Strategy Framework",
    "framework": "design_thinking_lean_startup_agile",
    "methodology": {
      "design_thinking": {
        "phases": ["empathize", "define", "ideate", "prototype", "test"],
        "iteration_cycles": "continuous",
        "user_research": "required_each_phase"
      },
      "lean_startup": {
        "build_measure_learn": "rapid_cycle_validation",
        "mvp_development": "minimal_viable_features",
        "pivot_criteria": "data_driven_decisions"
      },
      "agile_methodologies": {
        "sprint_planning": "user_story_driven",
        "daily_standups": "progress_and_blocker_focused",
        "retrospectives": "continuous_improvement"
      }
    },
    "tools": {
      "canvas_models": ["business_model_canvas", "value_proposition_canvas", "lean_canvas"],
      "planning_frameworks": ["okr", "smart_goals", "kpi_dashboards"],
      "analysis_tools": ["swot", "pestle", "five_forces", "customer_journey_mapping"]
    },
    "localization": {
      "market_research": "region_specific_analysis",
      "cultural_adaptation": "local_user_behavior_patterns",
      "regulatory_compliance": "jurisdiction_specific_requirements"
    }
  },

  "ai_enhancement": {
    "cognitive_header": "§ AI Enhancement and Quality Gates",
    "quality_gates": {
      "code_review": {
        "semantic_analysis": "enabled",
        "security_vulnerability_detection": "real_time",
        "performance_impact_analysis": "predictive",
        "accessibility_audit": "automated_wcag_validation",
        "technical_debt_detection": "continuous_monitoring"
      },
      "design_review": {
        "visual_hierarchy_analysis": "automated",
        "color_accessibility_validation": "real_time",
        "typography_optimization": "ai_enhanced",
        "brand_consistency_check": "pattern_recognition",
        "user_experience_scoring": "heuristic_evaluation"
      },
      "business_validation": {
        "market_research_synthesis": "ai_powered",
        "competitive_analysis": "automated_monitoring",
        "user_feedback_analysis": "sentiment_nlp",
        "performance_prediction": "machine_learning_models"
      }
    },
    "continuous_learning": {
      "pattern_recognition": "cross_project_insights",
      "best_practice_evolution": "industry_trend_analysis",
      "personalization": "user_preference_learning",
      "optimization_suggestions": "proactive_improvement_recommendations"
    },
    "automation": {
      "test_generation": "ai_powered_comprehensive_coverage",
      "code_optimization": "performance_security_focused",
      "documentation_generation": "context_aware_explanations",
      "refactoring_suggestions": "maintainability_improvements"
    }
  },

  "infrastructure_preservation": {
    "cognitive_header": "§ Infrastructure Preservation Policies",
    "description": "Detect and preserve existing setups with database detection",
    "domains": {
      "detection": {
        "methods": ["config_scan", "cert_inspection", "dns_check"]
      },
      "preservation": {
        "store_context": true,
        "validate_first": true
      }
    },
    "database": {
      "detection": {
        "methods": ["config_parse", "connection_test", "process_scan"],
        "common_dbs": ["postgres", "mysql", "sqlite", "redis", "mongodb"]
      },
      "preservation": {
        "critical_settings": ["connection_params", "user_roles", "db_names", "schema_versions"],
        "backup_validation": "integrity_checks_required",
        "migration_safety": "rollback_plans_mandatory"
      }
    },
    "safeguards": {
      "priority": "highest",
      "change_policy": "enhance_only_never_break",
      "validation_required": "before_any_changes",
      "rollback_capability": "always_available"
    }
  },

  "copilot_integration": {
    "cognitive_header": "§ GitHub Copilot Integration Features",
    "enabled": true,
    "features": {
      "code_generation": {
        "intelligent_suggestions": true,
        "context_aware_completions": true,
        "multi_language_support": ["ruby", "javascript", "typescript", "css", "html", "shell", "python", "go"],
        "framework_specific": {
          "rails": ["hotwire", "stimulus", "view_components", "active_record", "restful_routes", "crud_scaffolding"],
          "openbsd": ["pledge", "unveil", "httpd", "relayd", "pf", "bgpd", "ospfd"],
          "node": ["express", "react", "vue", "angular", "next", "nuxt"],
          "python": ["django", "flask", "fastapi", "sqlalchemy", "celery"]
        }
      },
      "pull_request_integration": {
        "automated_pr_creation": true,
        "code_review_assistance": true,
        "security_scanning": "dependency_vulnerability_analysis",
        "ci_cd_integration": "automated_testing",
        "compliance_validation": "wcag_security_performance_checks"
      },
      "repository_analysis": {
        "codebase_understanding": true,
        "pattern_recognition": true,
        "dependency_mapping": true,
        "architecture_analysis": true,
        "technical_debt_assessment": true
      },
      "chat_integration": {
        "project_context_awareness": true,
        "intelligent_suggestions": true,
        "code_explanation": true,
        "debugging_assistance": true,
        "refactoring_guidance": true
      }
    },
    "optimization": {
      "model_selection": "claude_sonnet_4_github_native",
      "context_window_management": true,
      "incremental_learning": true,
      "auto_accept_threshold": 0.9
    }
  },

  "security_policies": {
    "cognitive_header": "§ Advanced Security Policies",
    "openbsd": {
      "pledge_support": {
        "automatic_pledge_generation": true,
        "minimal_privilege_sets": ["stdio", "rpath", "wpath", "cpath", "inet", "unix", "proc", "exec"],
        "context_aware_restrictions": true,
        "security_validation": "compile_time_and_runtime"
      },
      "unveil_support": {
        "automatic_path_analysis": true,
        "minimal_filesystem_access": true,
        "readonly_by_default": true,
        "security_validation": true,
        "path_whitelisting": "strict_minimal_required"
      },
      "system_hardening": {
        "kernel_security": ["w_x_bit", "aslr", "stack_protection"],
        "network_security": ["pf_firewall", "bgp_security", "dns_security"],
        "service_isolation": ["chroot", "privilege_separation", "resource_limits"]
      }
    },
    "rails": {
      "version_requirements": "8.1+",
      "security_features": {
        "strong_parameters": "enforced",
        "csrf_protection": "enabled",
        "sql_injection_prevention": "parameterized_queries_only",
        "xss_protection": "content_security_policy",
        "session_security": "secure_httponly_samesite"
      },
      "modern_features": {
        "hotwire": "stimulus_turbo_integration",
        "view_components": "encapsulated_reusable_ui",
        "action_cable": "secure_websocket_implementation",
        "active_storage": "secure_file_handling"
      }
    },
    "general": {
      "dependency_management": "automated_vulnerability_scanning",
      "secrets_management": "environment_variables_vault_integration",
      "logging_security": "no_sensitive_data_in_logs",
      "audit_trails": "comprehensive_action_logging"
    }
  },

  "validation": {
    "cognitive_header": "§ Advanced Validation Systems",
    "strict_output_management": {
      "enabled": true,
      "preserve_user_work": "never_truncate_policy",
      "rollback_mechanisms": "automatic_on_failure",
      "validation_checkpoints": "each_phase_completion"
    },
    "iteration_validation": {
      "enabled": true,
      "max_iterations_per_phase": 10,
      "convergence_criteria": "quality_threshold_met",
      "circuit_breaker_integration": "prevent_infinite_loops"
    },
    "pipeline": {
      "syntax_validation": "real_time_linting",
      "semantic_validation": "context_aware_analysis",
      "compliance_validation": "wcag_security_performance_checks",
      "business_validation": "requirements_alignment_verification"
    },
    "rollback_mechanisms": {
      "automatic_triggers": ["validation_failure", "quality_degradation", "security_issues"],
      "manual_triggers": ["user_request", "stakeholder_feedback"],
      "rollback_scope": ["single_change", "phase_rollback", "complete_revert"],
      "recovery_procedures": "documented_step_by_step_process"
    }
  },

  "self_optimization": {
    "cognitive_header": "§ Self-Optimization Logic with Meta-Analysis",
    "philosophy": "continuous_improvement_through_learning",
    "triggers": {
      "performance_degradation": "response_time_increase_20_percent",
      "quality_issues": "error_rate_increase_above_baseline",
      "user_feedback": "satisfaction_score_below_threshold",
      "system_metrics": "resource_utilization_above_80_percent"
    },
    "forbidden_removals": [
      "accessibility_features",
      "security_measures", 
      "user_data_preservation",
      "compliance_requirements",
      "core_functionality"
    ],
    "bounded_recursive_enhancement": {
      "max_depth": 5,
      "safety_checks": "each_iteration",
      "rollback_points": "before_major_changes",
      "human_oversight": "required_for_structural_changes"
    },
    "meta_analysis": {
      "enabled": true,
      "frequency": "end_of_each_execution",
      "metrics_collected": [
        "execution_time_per_phase",
        "iteration_count_by_complexity",
        "user_satisfaction_scores",
        "quality_metrics_trends",
        "resource_utilization_patterns"
      ],
      "improvement_identification": {
        "pattern_recognition": "recurring_issues_and_bottlenecks",
        "performance_optimization": "execution_time_reduction_opportunities",
        "quality_enhancement": "defect_prevention_strategies",
        "user_experience": "satisfaction_improvement_areas"
      },
      "learning_integration": {
        "best_practice_updates": "successful_pattern_adoption",
        "failure_prevention": "anti_pattern_identification",
        "personalization": "user_preference_adaptation",
        "ecosystem_evolution": "industry_trend_integration"
      }
    },
    "success_metrics": {
      "completion_rate": "95_percent",
      "satisfaction": "nps_70_plus",
      "quality": "world_class_compliance",
      "performance": "95_plus_lighthouse"
    }
  },

  "stacks": {
    "cognitive_header": "§ Technology Stack Support and Detection",
    "detection": {
      "auto_detection": {
        "enabled": true,
        "confidence_threshold": 0.9,
        "ai_enhanced": "semantic_project_analysis"
      },
      "detection_patterns": {
        "rails": ["Gemfile", "config/application.rb", "app/", "bin/rails", "Rakefile"],
        "node": ["package.json", "node_modules/", "yarn.lock", "pnpm-lock.yaml"],
        "python": ["requirements.txt", "setup.py", "__pycache__/", "pyproject.toml"],
        "openbsd": ["/etc/pf.conf", "/etc/httpd.conf", "/etc/relayd.conf", "unveil", "pledge"],
        "business": ["business_plan", "canvas", "financial_model", "okr", "market_research"]
      }
    },
    "templates": {
      "rails": {
        "version": "8.1+",
        "features": ["hotwire", "stimulus", "view_components", "action_cable", "active_storage"],
        "testing": ["minitest", "system_tests", "integration_tests"],
        "security": ["strong_parameters", "csrf_protection", "sql_injection_prevention"],
        "performance": ["turbo", "stimulus_reflex", "caching_strategies"],
        "deployment": ["capistrano", "docker", "kubernetes", "cloud_platforms"]
      },
      "openbsd": {
        "version": "7.7+",
        "security": ["pledge", "unveil", "w_x_bit", "aslr"],
        "services": ["httpd", "relayd", "pf", "bgpd", "ospfd"],
        "management": ["rcctl", "pkg_add", "syspatch", "sysmerge"],
        "monitoring": ["netstat", "top", "vmstat", "iostat"]
      },
      "node": {
        "runtime": ["node_18+", "npm", "yarn", "pnpm"],
        "frameworks": ["express", "fastify", "next", "nuxt", "svelte"],
        "testing": ["jest", "vitest", "cypress", "playwright"],
        "tooling": ["webpack", "vite", "rollup", "esbuild"]
      },
      "python": {
        "runtime": ["python_3.11+", "pip", "poetry", "conda"],
        "frameworks": ["django", "flask", "fastapi", "starlette"],
        "testing": ["pytest", "unittest", "coverage", "tox"],
        "deployment": ["gunicorn", "uwsgi", "docker", "serverless"]
      }
    }
  },

  "formatting": {
    "cognitive_header": "§ Universal Formatting Standards",
    "universal": {
      "indentation": "2_spaces_consistent",
      "line_endings": "lf_unix_style",
      "encoding": "utf8_no_bom",
      "trailing_whitespace": "remove_always",
      "final_newline": "required",
      "max_line_length": 120
    },
    "accessibility": {
      "alt_text": "descriptive_contextual_meaningful",
      "aria_labels": "comprehensive_semantic_structure",
      "heading_hierarchy": "logical_sequential_h1_h6",
      "color_contrast": "wcag_aaa_7_1_ratio_minimum",
      "focus_indicators": "visible_high_contrast_consistent",
      "semantic_html": "proper_elements_for_content_structure"
    },
    "language_specific": {
      "ruby": {
        "style_guide": "rubocop_community_standards",
        "naming": "snake_case_methods_constants_screaming",
        "indentation": "2_spaces_no_tabs",
        "string_literals": "double_quotes_preferred",
        "method_definitions": "def_end_explicit_return_optional"
      },
      "javascript": {
        "style_guide": "standard_js_eslint",
        "naming": "camelCase_variables_functions_PascalCase_classes",
        "semicolons": "automatic_insertion_relied_upon",
        "quotes": "single_quotes_preferred",
        "indentation": "2_spaces_consistent"
      },
      "typescript": {
        "strict_mode": "enabled_all_checks",
        "type_annotations": "explicit_for_public_apis",
        "interface_definitions": "prefer_over_type_aliases",
        "null_safety": "strict_null_checks_enabled"
      },
      "css": {
        "methodology": "bem_or_css_modules",
        "properties": "alphabetical_ordering",
        "values": "shorthand_when_appropriate",
        "units": "rem_em_for_typography_px_for_borders"
      },
      "html": {
        "doctype": "html5_standard",
        "attributes": "lowercase_double_quoted",
        "semantic": "proper_elements_for_content",
        "accessibility": "aria_alt_text_required"
      }
    }
  },

  "design_system": {
    "cognitive_header": "§ World-Class Design System Standards",
    "visual_layout_prompts": {
      "grid_system": "12_column_flexible_responsive",
      "spacing_scale": "8px_base_geometric_progression",
      "breakpoints": "mobile_first_responsive_design"
    },
    "principles": {
      "snohetta_neue_standards": "world_class_design_excellence",
      "accessibility_first": "wcag_2_2_aaa_compliance",
      "performance_optimized": "95_plus_lighthouse_scores",
      "user_centered": "human_centered_design_approach"
    },
    "typography": {
      "scale": "golden_ratio_1_618_modular_scale",
      "families": {
        "primary": "system_font_stack_performance_optimized",
        "secondary": "web_safe_fallbacks_included",
        "monospace": "developer_tools_code_display"
      },
      "hierarchy": {
        "h1": "2.618rem_bold_primary_color",
        "h2": "1.618rem_semibold_secondary_color", 
        "h3": "1.272rem_medium_text_color",
        "body": "1rem_regular_text_color",
        "small": "0.786rem_regular_muted_color"
      },
      "line_height": "1.5_base_adjusted_for_scale",
      "letter_spacing": "optimal_for_readability"
    },
    "color_system": {
      "primary_palette": "brand_colors_accessible_contrast",
      "semantic_colors": "success_warning_error_info_states",
      "neutral_scale": "grayscale_8_step_progression",
      "accessibility": "wcag_aaa_contrast_ratios_verified"
    },
    "spacing_system": {
      "base_unit": "8px",
      "scale": [4, 8, 12, 16, 24, 32, 48, 64, 96, 128],
      "semantic_names": ["xs", "sm", "md", "lg", "xl", "2xl", "3xl", "4xl", "5xl", "6xl"]
    },
    "component_standards": {
      "button_hierarchy": "primary_secondary_tertiary_ghost",
      "form_controls": "consistent_spacing_clear_labels",
      "navigation": "logical_hierarchy_breadcrumbs",
      "feedback": "toast_modal_inline_error_success"
    }
  },

  "specialized_capabilities": {
    "cognitive_header": "§ Advanced Specialized Capabilities",
    "visualization": {
      "data_visualization": ["d3js", "chart_js", "plotly", "observable"],
      "design_tools": ["figma_integration", "sketch_compatibility"],
      "3d_graphics": ["three_js", "webgl", "canvas_optimization"],
      "animation": ["framer_motion", "gsap", "css_animations"]
    },
    "async_processing": {
      "message_queues": ["redis", "rabbitmq", "kafka", "sidekiq"],
      "background_jobs": ["delayed_job", "resque", "good_job"],
      "real_time": ["action_cable", "websockets", "server_sent_events"],
      "rate_limiting": ["rack_attack", "redis_rate_limiting"]
    },
    "browser_automation": {
      "testing_frameworks": ["selenium", "cypress", "playwright", "capybara"],
      "performance_testing": ["lighthouse_ci", "web_page_test", "sitespeed"],
      "accessibility_testing": ["axe_core", "wave", "pa11y"],
      "cross_browser": ["browserstack", "sauce_labs", "local_testing"]
    },
    "scraping": {
      "ethical_scraping": "robots_txt_respect_rate_limiting",
      "tools": ["nokogiri", "mechanize", "puppeteer", "scrapy"],
      "data_processing": ["csv_json_xml_parsing", "data_cleaning"],
      "storage": ["database_persistence", "file_caching", "api_endpoints"]
    }
  },

  "quality_assurance": {
    "cognitive_header": "§ Comprehensive Quality Assurance",
    "gates": {
      "code_quality": {
        "static_analysis": ["rubocop", "eslint", "typescript_compiler"],
        "complexity_metrics": ["cyclomatic_complexity", "cognitive_complexity"],
        "test_coverage": "90_percent_minimum_line_branch",
        "documentation": "public_api_fully_documented"
      },
      "security": {
        "vulnerability_scanning": ["brakeman", "bundler_audit", "npm_audit"],
        "dependency_checking": ["automated_updates", "security_advisories"],
        "penetration_testing": ["scheduled_security_audits"],
        "compliance": ["gdpr", "sox", "hipaa_as_applicable"]
      },
      "performance": {
        "load_testing": ["artillery", "jmeter", "k6"],
        "profiling": ["rack_mini_profiler", "memory_profiler"],
        "monitoring": ["application_performance_monitoring"],
        "optimization": ["database_query_optimization", "asset_optimization"]
      }
    },
    "tools": {
      "testing": {
        "unit_tests": "comprehensive_coverage",
        "integration_tests": "critical_path_coverage",
        "system_tests": "end_to_end_user_flows",
        "accessibility_tests": "automated_wcag_validation"
      },
      "ci_cd": {
        "pipeline": "automated_build_test_deploy",
        "environments": ["development", "staging", "production"],
        "rollback": "automated_health_checks",
        "monitoring": "real_time_alerts"
      }
    },
    "ai_enhancement": {
      "predictive_analysis": "failure_prediction_models",
      "optimization_suggestions": "performance_improvement_recommendations",
      "pattern_recognition": "defect_pattern_identification",
      "automated_testing": "ai_generated_test_cases"
    }
  },

  "deployment": {
    "cognitive_header": "§ Production Deployment Standards",
    "environments": ["development", "staging", "production"],
    "requirements": {
      "docs": ["readme", "setup_guide", "api_documentation", "deployment_guide"],
      "scripts": ["install", "test", "build", "deploy", "rollback"],
      "configs": ["environment_examples", "monitoring_setup", "logging_config"]
    },
    "monitoring": {
      "application_metrics": ["response_times", "error_rates", "throughput"],
      "infrastructure_metrics": ["cpu", "memory", "disk", "network"],
      "business_metrics": ["user_engagement", "conversion_rates", "revenue"],
      "alerting": ["slack_integration", "email_notifications", "sms_critical"]
    },
    "security": {
      "ssl_tls": "grade_a_plus_ssl_labs",
      "headers": ["security_headers", "csp", "hsts"],
      "firewall": "web_application_firewall",
      "monitoring": ["intrusion_detection", "log_analysis"]
    }
  }
}