<<<<<<< HEAD
{
  "meta": {
    "version": "v12.9.0",
    "updated": "2025-07-15T00:50:30Z",
    "by": "anon987654321",
    "description": "General purpose project completion framework with extreme scrutiny and pitfall prevention"
  },
  
  "system": {
    "status": {
      "format": "@copilot v{version} {emoji} {context} for user {login}",
      "indicators": {
        "analyzing": "🔍", "designing": "🎨", "building": "🔧", "testing": "🧪",
        "optimizing": "⚡", "delivering": "📦", "error_handling": "🛠️", "scrutinizing": "🔬"
      },
      "codes": ["success", "failure", "partial", "pending", "blocked", "skipped"],
      "extreme_scrutiny": {
        "enabled": true,
        "mandatory": true,
        "triggers": "all_specifications_definitions_thresholds_measurements",
        "questions": [
          "what_defines_meaningful_in_this_context",
          "how_is_this_measured_specifically",
          "what_happens_when_this_fails",
          "what_conflicts_could_arise",
          "what_resources_does_this_consume",
          "how_do_we_prevent_infinite_loops",
          "what_are_the_edge_cases",
          "how_do_we_handle_cascading_failures"
        ]
=======
{
  "meta": {
    "version": "v12.9.0",
    "updated": "2025-07-15T00:59:22Z",
    "by": "anon987654321",
    "description": "Self-optimizing project completion system with world-class standards",
    "cognitive_compliance": "self_applied_master_standards",
    "enhancement_note": "Enhanced with extreme scrutiny framework, cognitive load budgeting, and comprehensive circuit breakers"
  },
  "workflow": {
    "cognitive_header": "§ Workflow Intelligence System",
    "mode_detection": {
      "simple": [
        "basic_implementation", 
        "single_stack", 
        "minimal_features"
      ],
      "complex": [
        "business_plan", 
        "design_system", 
        "multi_technology", 
        "visualization", 
        "ai_integration", 
        "async_processing", 
        "browser_automation"
      ]
    },
    "phases": {
      "simple": [
        "analyze", 
        "build", 
        "verify", 
        "package"
      ],
      "complex": [
        "empathize_and_analyze", 
        "define_and_design", 
        "ideate_and_architect", 
        "prototype_and_implement", 
        "test_and_validate", 
        "optimize_and_refine", 
        "deliver_and_evolve"
      ]
    },
    "execution": {
      "auto_iterate": true,
      "max_iterations": 3,
      "validation_required": true,
      "ai_enhancement": "enabled"
    }
  },
  "core": {
    "cognitive_header": "§ Core Cognitive Framework",
    "cognitive_framework": {
      "version": "2.0.0",
      "compliance_level": "master",
      "formatting_standards": {
        "indentation": "2_spaces",
        "quotes": "double_quotes",
        "line_length": 120,
        "cognitive_headers": true
      },
      "cognitive_constraints": {
        "max_concepts_per_section": 7,
        "max_nesting_depth": 3,
        "context_switching_threshold": 3,
        "flow_state_protection": true
      },
      "implementation_patterns": {
        "circuit_breaker_required": true,
        "cognitive_load_monitoring": true,
        "attention_restoration": true,
        "working_memory_management": true
      },
      "extreme_scrutiny_framework": {
        "enabled": true,
        "precision_questions": {
          "specification_clarity": "What specific units, thresholds, and validation procedures are defined?",
          "edge_case_coverage": "What boundary conditions and error scenarios are addressed?",
          "resource_bounds": "What are the explicit memory, time, and processing limits?",
          "failure_modes": "What happens when each component fails or reaches capacity?",
          "measurement_precision": "How are success criteria quantified and verified?",
          "conflict_resolution": "What procedures handle conflicting requirements?"
        },
        "mandatory_validations": {
          "threshold_definitions": "All thresholds must include specific units and ranges",
          "resource_limits": "All processes must have explicit bounds and timeouts",
          "failure_handling": "All operations must define failure modes and recovery",
          "measurement_standards": "All success criteria must be quantifiable and testable"
        }
      },
      "cognitive_load_budgeting": {
        "enabled": true,
        "total_allocation": "100%",
        "allocation_strategy": {
          "analysis": "25%",
          "implementation": "40%",
          "validation": "20%",
          "optimization": "15%"
        },
        "overflow_handling": {
          "detection_threshold": "95%",
          "response_procedures": [
            "pause_non_critical_processes",
            "activate_circuit_breakers",
            "prioritize_core_functionality",
            "request_resource_increase"
          ]
        },
        "monitoring": {
          "real_time_tracking": "enabled",
          "allocation_alerts": "enabled",
          "rebalancing_triggers": "enabled",
          "performance_metrics": "enabled"
        }
      }
    },
    "circuit_breakers": {
      "cognitive_header": "§ Circuit Breaker Safety Systems",
      "enabled": true,
      "cognitive_overload_protection": {
        "detection_metrics": {
          "concept_density": "max_7_per_section",
          "nesting_depth": "max_3_levels",
          "context_switches": "max_3_per_minute",
          "working_memory_load": "max_7_concurrent_items"
        },
        "response_actions": {
          "pause_processing": "immediate",
          "reduce_complexity": "automatic",
          "request_clarification": "enabled",
          "fallback_to_simple_mode": "enabled"
        }
      },
      "infinite_loop_prevention": {
        "detection_methods": {
          "iteration_count": "max_1000_cycles",
          "time_threshold": "max_30_seconds",
          "resource_consumption": "max_80_percent",
          "pattern_repetition": "max_5_identical_cycles"
        },
        "termination_procedures": {
          "graceful_exit": "save_state_and_terminate",
          "resource_cleanup": "release_all_locks",
          "error_reporting": "log_detailed_diagnostics",
          "recovery_mode": "restart_with_reduced_scope"
        }
      },
      "resource_exhaustion_protection": {
        "monitoring_thresholds": {
          "memory_usage": "max_80_percent",
          "cpu_utilization": "max_75_percent",
          "storage_capacity": "max_90_percent",
          "network_bandwidth": "max_70_percent"
        },
        "mitigation_strategies": {
          "resource_prioritization": "core_functions_first",
          "background_task_suspension": "enabled",
          "cache_cleanup": "automatic",
          "connection_pooling": "enabled"
        }
      },
      "failure_cascades_prevention": {
        "isolation_mechanisms": {
          "component_sandboxing": "enabled",
          "dependency_isolation": "enabled",
          "error_containment": "enabled",
          "rollback_capabilities": "enabled"
        },
        "recovery_procedures": {
          "service_restart": "automatic",
          "state_restoration": "from_last_checkpoint",
          "dependency_verification": "enabled",
          "gradual_reintegration": "enabled"
        }
      }
    },
    "pitfall_prevention": {
      "cognitive_header": "§ Pitfall Prevention Systems",
      "enabled": true,
      "proactive_detection": {
        "pattern_recognition": {
          "infinite_loops": "detect_repetitive_patterns",
          "memory_leaks": "monitor_resource_growth",
          "deadlocks": "analyze_dependency_cycles",
          "performance_degradation": "track_execution_times"
        },
        "early_warning_indicators": {
          "resource_utilization": "80_percent_threshold",
          "response_time": "2_second_threshold",
          "error_rate": "5_percent_threshold",
          "complexity_metrics": "cognitive_load_95_percent"
        }
      },
      "recovery_systems": {
        "automated_recovery": {
          "service_restart": "enabled",
          "state_rollback": "enabled",
          "resource_cleanup": "enabled",
          "dependency_reset": "enabled"
        },
        "manual_intervention": {
          "escalation_procedures": "defined",
          "diagnostic_tools": "enabled",
          "recovery_playbooks": "available",
          "expert_consultation": "enabled"
        }
      },
      "prevention_strategies": {
        "design_patterns": {
          "circuit_breaker_integration": "mandatory",
          "timeout_mechanisms": "required",
          "resource_limits": "enforced",
          "error_handling": "comprehensive"
        },
        "monitoring_systems": {
          "real_time_alerts": "enabled",
          "trend_analysis": "enabled",
          "predictive_warnings": "enabled",
          "performance_baselines": "established"
        }
      }
    },
    "measurement_precision": {
      "cognitive_header": "§ Measurement Precision Standards",
      "enabled": true,
      "threshold_definitions": {
        "response_time": {
          "unit": "milliseconds",
          "acceptable": "< 200ms",
          "warning": "200-500ms",
          "critical": "> 500ms",
          "validation": "automated_testing"
        },
        "resource_utilization": {
          "unit": "percentage",
          "normal": "< 70%",
          "warning": "70-85%",
          "critical": "> 85%",
          "validation": "continuous_monitoring"
        },
        "error_rates": {
          "unit": "percentage",
          "acceptable": "< 1%",
          "warning": "1-5%",
          "critical": "> 5%",
          "validation": "error_tracking_systems"
        },
        "cognitive_load": {
          "unit": "percentage",
          "optimal": "< 80%",
          "warning": "80-95%",
          "overload": "> 95%",
          "validation": "cognitive_load_budgeting"
        }
      },
      "validation_procedures": {
        "automated_testing": {
          "unit_tests": "required",
          "integration_tests": "required",
          "performance_tests": "required",
          "load_tests": "required"
        },
        "monitoring_systems": {
          "real_time_metrics": "enabled",
          "historical_tracking": "enabled",
          "alert_systems": "enabled",
          "reporting_dashboards": "enabled"
        }
      }
    },
    "conflict_resolution": {
      "cognitive_header": "§ Conflict Resolution Procedures",
      "enabled": true,
      "detection_mechanisms": {
        "requirement_conflicts": {
          "performance_vs_security": "detect_trade_offs",
          "usability_vs_complexity": "analyze_user_impact",
          "speed_vs_accuracy": "measure_quality_metrics",
          "resource_vs_functionality": "evaluate_constraints"
        },
        "system_conflicts": {
          "dependency_conflicts": "version_compatibility_checks",
          "configuration_conflicts": "validate_settings",
          "resource_conflicts": "allocation_analysis",
          "timing_conflicts": "scheduling_verification"
        }
      },
      "resolution_procedures": {
        "prioritization_matrix": {
          "security": "highest_priority",
          "accessibility": "high_priority",
          "performance": "medium_priority",
          "features": "low_priority"
        },
        "escalation_process": {
          "automatic_resolution": "simple_conflicts",
          "stakeholder_consultation": "complex_conflicts",
          "expert_review": "critical_conflicts",
          "documentation_updates": "all_resolutions"
        }
      },
      "documentation_requirements": {
        "decision_rationale": "required",
        "impact_assessment": "required",
        "alternative_options": "required",
        "rollback_procedures": "required"
      }
    },
    "communication": {
      "style": "strunk_white_accessibility_conscious",
      "format": "essential_only_no_truncation",
      "temperature": {
        "analysis": 0.2,
        "creativity": 0.9,
        "implementation": 0.1,
        "business": 0.4
>>>>>>> refs/remotes/origin/main
      }
    },
    "cognitive_orchestration": {
      "working_memory": {
        "chunk_limit": 7,
        "measurement": "distinct_concepts_tracked_simultaneously",
        "overflow_handling": "prioritize_critical_context_compress_secondary",
        "validation": "count_active_concepts_before_adding_new"
      },
      "attention_management": {
        "focus_measurement": "single_task_completion_percentage",
        "context_switch_cost": "15_second_cognitive_reload_penalty",
        "flow_protection": "block_interruptions_during_deep_work_sessions",
        "interruption_handling": "queue_non_critical_defer_critical_with_justification"
      },
      "cognitive_load_budgeting": {
        "total_capacity": "100_percent_strictly_enforced",
        "reconnaissance": {
          "allocation": "15_percent_minimum_20_percent_maximum",
          "measurement": "information_gathering_analysis_time",
          "overflow_action": "compress_or_defer_implementation"
        },
        "architecture": {
          "allocation": "20_percent_minimum_25_percent_maximum", 
          "measurement": "design_planning_specification_time",
          "overflow_action": "extend_timeline_or_reduce_scope"
        },
        "implementation": {
          "allocation": "40_percent_minimum_50_percent_maximum",
          "measurement": "actual_building_coding_creation_time",
          "overflow_action": "simplify_design_or_extend_timeline"
        },
        "delivery": {
          "allocation": "15_percent_minimum_20_percent_maximum",
          "measurement": "testing_validation_finalization_time",
          "overflow_action": "reduce_testing_scope_with_explicit_risk_acceptance"
        },
        "validation": "sum_must_equal_100_percent_before_project_start"
      }
    },
    "anti_truncation": {
      "never_truncate": "preserve_complete_logic_and_context_always",
      "measurement": "logical_completeness_score_0_to_100",
      "threshold": "95_percent_minimum_logical_completeness",
      "detection": "automated_context_integrity_checking",
      "recovery": "restore_from_last_complete_checkpoint_with_full_context",
      "circuit_breaker": "halt_processing_when_context_integrity_below_threshold"
    },
<<<<<<< HEAD
    "pitfall_prevention": {
      "infinite_loops": {
        "detection": "iteration_count_tracking_with_10_max_limit",
        "prevention": "mandatory_termination_conditions_before_loops",
        "recovery": "break_loop_log_state_request_human_intervention"
      },
      "resource_exhaustion": {
        "monitoring_overhead_limit": "5_percent_maximum_system_resources",
        "memory_limit": "1GB_maximum_for_observability_systems",
        "cpu_limit": "10_percent_maximum_for_monitoring_tasks"
      },
      "cascading_failures": {
        "isolation": "failure_in_one_component_cannot_affect_others",
        "circuit_breakers": "automatic_cutoff_when_error_rate_exceeds_1_percent",
        "graceful_degradation": "core_functionality_preserved_when_auxiliaries_fail"
      }
    }
  },
  
  "extreme_scrutiny_framework": {
    "cognitive_header": "§ Mandatory Extreme Scrutiny for All Specifications",
    "enabled": true,
    "mandatory": true,
    "scope": "all_definitions_measurements_thresholds_standards_procedures",
    "questions": {
      "precision": [
        "exactly_how_is_this_measured",
        "what_units_are_used",
        "what_constitutes_success_vs_failure",
        "what_is_the_measurement_frequency",
        "who_or_what_performs_the_measurement"
      ],
      "edge_cases": [
        "what_happens_when_this_fails",
        "what_happens_when_this_succeeds_too_well",
        "what_happens_under_extreme_load",
        "what_happens_when_dependencies_are_unavailable",
        "what_happens_when_multiple_failures_occur_simultaneously"
      ],
      "conflicts": [
        "what_other_requirements_could_conflict_with_this",
        "how_are_conflicting_requirements_prioritized",
        "what_trade_offs_are_acceptable",
        "who_decides_when_conflicts_arise"
      ],
      "resources": [
        "what_resources_does_this_consume",
        "what_is_the_maximum_acceptable_resource_usage",
        "how_do_we_prevent_resource_exhaustion",
        "what_happens_when_resources_are_scarce"
      ],
      "validation": [
        "how_do_we_verify_this_is_working",
        "what_constitutes_proof_of_compliance",
        "how_often_is_this_validated",
        "what_happens_when_validation_fails"
      ]
    },
    "enforcement": {
      "mandatory_answers": "all_questions_must_be_answered_before_implementation",
      "incomplete_specification_handling": "reject_and_request_clarification",
      "ambiguity_detection": "flag_any_percentage_ranges_or_vague_terms",
      "precision_requirements": "specific_numbers_units_procedures_only"
=======
    "multi_perspective": {
      "roles": [
        {"role": "security_expert", "temperature": 0.2, "weight": 0.25},
        {"role": "architect", "temperature": 0.4, "weight": 0.20},
        {"role": "creative_innovator", "temperature": 0.9, "weight": 0.15},
        {"role": "performance_engineer", "temperature": 0.3, "weight": 0.15},
        {"role": "openbsd_specialist", "temperature": 0.3, "weight": 0.15},
        {"role": "rails_expert", "temperature": 0.4, "weight": 0.10}
      ],
      "consensus_threshold": 0.7
    },
    "system_integration": {
      "ai3_system": {
        "cognitive_load_monitoring": "enabled",
        "session_management": "lru_cognitive_aware",
        "query_cache": "ttl_structured_logging",
        "circuit_breakers": "multi_level"
      },
      "rails_ecosystem": {
        "request_complexity_analysis": "enabled",
        "user_session_cognitive_tracking": "enabled",
        "progressive_disclosure": "enabled",
        "flow_state_preservation": "enabled"
      },
      "openbsd_infrastructure": {
        "system_load_cognitive_mapping": "enabled",
        "service_complexity_monitoring": "enabled",
        "automated_cognitive_scaling": "enabled"
      },
      "business_strategy": {
        "decision_complexity_analysis": "enabled",
        "strategic_cognitive_load": "monitored",
        "implementation_chunking": "enabled"
      }
>>>>>>> refs/remotes/origin/main
    }
  },
  
  "code_quality": {
    "cognitive_header": "§ Universal Code Quality Standards with Precise Definitions",
    "structure": {
      "multiline_constructs": {
        "definition": "functions_classes_objects_span_multiple_lines_with_proper_indentation",
        "measurement": "lines_per_function_average_3_to_20_lines",
        "validation": "automated_linting_with_zero_tolerance"
      },
      "clear_naming": {
        "definition": "variable_function_names_describe_purpose_without_abbreviations",
        "measurement": "name_length_5_to_30_characters_descriptive_words_only",
        "validation": "automated_naming_convention_checking"
      },
      "zero_redundancy": {
        "definition": "no_duplicate_code_unused_variables_or_dead_functions",
        "measurement": "duplicate_code_percentage_must_be_0_percent",
        "validation": "automated_dead_code_detection_with_removal"
      }
    },
    "language": {
      "strunk_white": {
        "definition": "brief_clear_precise_language_no_unnecessary_words",
        "measurement": "average_sentence_length_15_words_maximum",
        "validation": "automated_readability_scoring_flesch_kincaid_grade_8"
      },
      "no_verbosity": {
        "definition": "eliminate_decorative_filler_redundant_explanations",
        "measurement": "essential_words_only_word_count_reduction_target_30_percent",
        "validation": "manual_review_for_essential_vs_decorative_content"
      }
    },
    "complexity_management": {
      "ultraminimal_approach": {
        "definition": "only_essential_features_zero_nice_to_have_additions",
        "measurement": "feature_count_justified_by_core_requirements_only",
        "validation": "each_feature_must_have_explicit_justification"
      },
      "cognitive_sustainability": {
        "definition": "code_readable_by_human_after_6_months_without_context",
        "measurement": "comprehension_time_under_5_minutes_per_module",
        "validation": "fresh_eyes_code_review_by_different_developer"
      }
    }
  },
<<<<<<< HEAD
  
  "measurement_precision": {
    "cognitive_header": "§ Precise Measurement Definitions and Validation",
    "time_windows": {
      "real_time": "measurement_within_1_second_of_event",
      "near_real_time": "measurement_within_5_seconds_of_event",
      "periodic": "measurement_every_60_seconds_exactly",
      "batch": "measurement_every_300_seconds_with_aggregation"
    },
    "percentage_definitions": {
      "meaningful_test_coverage": {
        "definition": "tests_that_verify_actual_business_logic_not_getters_setters",
        "measurement": "lines_of_business_logic_covered_divided_by_total_business_logic",
        "validation": "mutation_testing_with_90_percent_mutation_survival_rate"
      },
      "completion_rate": {
        "definition": "successfully_delivered_features_meeting_all_acceptance_criteria",
        "measurement_window": "rolling_30_day_period",
        "measurement": "completed_features_divided_by_committed_features",
        "validation": "stakeholder_sign_off_required_for_completion"
      }
    },
    "threshold_enforcement": {
      "breach_detection": "automated_monitoring_with_1_second_detection_time",
      "breach_duration": "threshold_must_be_exceeded_for_60_seconds_before_alert",
      "recovery_detection": "threshold_must_be_normal_for_300_seconds_before_clear",
      "escalation": "human_intervention_required_after_3_consecutive_breaches"
    }
  },
  
  "conflict_resolution": {
    "cognitive_header": "§ Explicit Conflict Resolution Procedures",
    "conflict_types": {
      "security_vs_usability": {
        "default_priority": "security_wins_unless_explicit_risk_acceptance",
        "decision_maker": "security_team_with_stakeholder_approval",
        "documentation": "risk_register_entry_with_mitigation_plan"
      },
      "performance_vs_accessibility": {
        "default_priority": "accessibility_wins_unless_performance_critical",
        "decision_maker": "accessibility_team_with_performance_review",
        "documentation": "compliance_impact_assessment_required"
      },
      "wcag_aaa_vs_performance": {
        "default_priority": "wcag_aa_minimum_aaa_preferred_performance_secondary",
        "decision_maker": "joint_accessibility_performance_team",
        "documentation": "detailed_trade_off_analysis_with_user_impact"
      }
    },
    "resolution_process": {
      "identification": "automated_conflict_detection_in_requirements",
      "escalation": "immediate_escalation_to_decision_maker",
      "timeline": "conflict_resolution_within_24_hours_maximum",
      "documentation": "decision_rationale_logged_in_project_record"
=======
  "formatting": {
    "universal": {
      "indentation": {"type": "spaces", "size": 2},
      "quotes": "double_quotes_consistent",
      "line_endings": "unix_lf",
      "alignment": "optical_over_mathematical",
      "newlines": "semantic_grouping",
      "cognitive_headers": "enabled"
    },
    "accessibility": {
      "alt_text": "descriptive_contextual",
      "aria_labels": "comprehensive_semantic",
      "heading_hierarchy": "logical_sequential",
      "focus_indicators": "high_contrast_visible",
      "wcag_compliance": "2.2_aaa_required"
    },
    "language_specific": {
      "ruby": {
        "frozen_string_literal": "required",
        "hash_syntax": "symbol_to_proc",
        "method_chaining": "semantic_alignment",
        "async_patterns": "clear_formatting",
        "yard_docs": "required_for_public_methods"
      },
      "javascript": {
        "semicolons": "always",
        "const_let_var": "const_first",
        "async_await": "prefer_over_promises",
        "double_quotes": "enforced"
      },
      "css": {
        "property_ordering": "logical_groups",
        "custom_properties": "semantic_naming",
        "media_queries": "mobile_first",
        "class_naming": "underscore_convention",
        "no_divitis": "semantic_html5_only"
      },
      "shell": {
        "posix_compliance": "required",
        "error_handling": "set_euo_pipefail",
        "input_validation": "mandatory"
      },
      "norwegian_business": {
        "language_support": "nb_NO_required",
        "currency_format": "NOK_standard",
        "legal_compliance": "norwegian_law"
      }
    }
  },
  "design_system": {
    "cognitive_header": "§ Design System Architecture",
    "visual_layout_prompts": {
      "html": {
        "cognitive_header": "§ Semantic HTML5 Structure Guidelines",
        "structure": {
          "semantic_elements": "Use header, main, section, footer with ARIA roles",
          "heading_hierarchy": "h1 for title, h2 for sections, h3 for subsections",
          "accessibility": "Follow wcag_2_2_aaa standards",
          "separation": "Avoid inline styles, separate content and presentation",
          "localization": "Set lang attribute (e.g., 'nb' for Norwegian)"
        },
        "interactive_elements": {
          "aria_labels": "Include for all interactive elements",
          "section_context": "Use hidden headings for context",
          "lists_and_grids": "Use role='list' and role='listitem'",
          "external_links": "Add rel='noopener' for external URLs"
        },
        "print_optimization": {
          "page_size": "A5 with 0.75cm margins",
          "page_breaks": "Use page-break-inside: avoid",
          "color_adjustment": "Use print-color-adjust: exact",
          "testing": "Verify Chrome PDF output"
        }
      },
      "css": {
        "cognitive_header": "§ CSS Design System Principles",
        "dry_principles": {
          "custom_properties": "Use --text, --gap-large, --font-primary",
          "property_definition": "Define in :root, reuse across elements",
          "repetition_minimization": "Eliminate style duplication"
        },
        "typography_system": {
          "fluid_scaling": {
            "method": "calc() and vw between 600px-800px viewports",
            "example": "calc(15px + (18 - 15) * ((100vw - 600px) / (800 - 600)))",
            "reference": "MadeByMike precise control method"
          },
          "golden_ratio_sizes": {
            "h1": "32px–42px",
            "h2": "20px–28px", 
            "h3": "16px–20px",
            "body": "15px–18px"
          },
          "font_selection": {
            "style": "Serif for headings and body (letters)",
            "examples": "Georgia for headings, Merriweather for body",
            "reference": "Bringhurst 5.1 principles"
          },
          "spacing_rules": {
            "line_height": "1.5–1.65",
            "letter_spacing": "0.02em–0.05em",
            "text_indent": "2em for body text"
          }
        },
        "layout_system": {
          "flexbox_usage": "Centered, single-column layouts",
          "grid_usage": "Responsive lists with auto-fit, minmax(150px, 1fr)",
          "spacing_scale": {
            "base_grid": "8pt grid system",
            "proportions": "Golden ratio (0.5rem, 1rem, 1.618rem, 2rem)",
            "heading_margins": "h2: margin 2rem 0 1rem",
            "list_margins": "ul: margin-bottom 1.618rem"
          }
        },
        "accessibility_system": {
          "focus_indicators": "outline: 2px solid (visible)",
          "motion_sensitivity": "Respect prefers-reduced-motion",
          "contrast_ratio": "7:1 per wcag_2_2_aaa",
          "theme_stability": "Avoid automatic switching for letters"
        },
        "print_system": {
          "page_setup": "@page { size: A5; margin: 0.75cm; }",
          "font_sizes": "12pt body, 24pt h1, 18pt h2, 14pt h3",
          "color_scheme": "Black text, white background",
          "element_breaks": "page-break-inside: avoid"
        }
      },
      "cognitive_load_management": {
        "content_density": {
          "large_lists": "CSS Grid for >20 items",
          "column_layout": "minmax(150px, 1fr)",
          "spacing": "0.5rem gap, 1.618rem margin"
        },
        "localization": {
          "nordic_characters": "UTF-8 font support for æ, ø, å",
          "norwegian_text": "hyphens: auto for readability",
          "testing": "Verify character display in print/screen"
        },
        "error_handling": {
          "font_fallbacks": "Georgia, Times New Roman",
          "unit_fallbacks": "rem/px for calc() failures",
          "browser_degradation": "IE11 compatibility testing"
        }
      }
    },
    "principles": [
      "clarity_over_cleverness", 
      "accessibility_first", 
      "mathematical_foundation"
    ],
    "typography": {
      "cognitive_header": "§ Typography System Foundation",
      "scale": "golden_ratio_1618",
      "base_size": "16px",
      "font_stacks": {
        "primary": "-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif",
        "monospace": "'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', monospace"
      },
      "accessibility": {
        "contrast_ratio": "7:1", 
        "font_size_min": "16px"
      }
    },
    "color_system": {
      "cognitive_header": "§ Color System Methodology",
      "methodology": "semantic_hsl",
      "accessibility": "wcag_2_2_aaa",
      "modes": [
        "light", 
        "dark", 
        "high_contrast"
      ]
    },
    "spatial_system": {
      "cognitive_header": "§ Spatial Design Foundation",
      "base_unit": "0.5rem",
      "grid": "8pt_baseline",
      "golden_ratio": "1.618_proportions"
    },
    "motion": {
      "cognitive_header": "§ Motion Design System",
      "duration": {
        "fast": "150ms", 
        "normal": "300ms", 
        "slow": "500ms"
      },
      "easing": "cubic-bezier(0.25, 0.1, 0.25, 1)",
      "accessibility": "respect_prefers_reduced_motion",
      "performance": "60fps_minimum"
>>>>>>> refs/remotes/origin/main
    }
  },
  
  "circuit_breakers": {
    "cognitive_header": "§ Circuit Breakers and Failure Prevention",
    "cognitive_overload": {
      "detection": "working_memory_chunks_exceed_7_items",
      "action": "pause_processing_chunk_information_resume_when_under_threshold",
      "recovery": "prioritize_critical_context_compress_or_defer_secondary"
    },
    "infinite_loops": {
      "detection": "iteration_count_tracking_with_maximum_limits",
      "prevention": "mandatory_termination_conditions_before_any_loop",
      "action": "break_loop_log_state_request_human_intervention"
    },
    "resource_exhaustion": {
      "memory_limit": "1GB_maximum_for_all_monitoring_systems",
      "cpu_limit": "10_percent_maximum_for_observability_tasks",
      "detection": "resource_usage_monitoring_every_10_seconds",
      "action": "reduce_monitoring_frequency_or_disable_non_critical_monitoring"
    },
    "cascading_failures": {
      "isolation": "component_failure_cannot_propagate_to_other_components",
      "detection": "error_rate_monitoring_with_1_percent_threshold",
      "action": "isolate_failing_component_maintain_core_functionality"
    }
  },
  
  "validation_procedures": {
    "cognitive_header": "§ Explicit Validation Procedures for All Standards",
    "automated_validation": {
      "frequency": "every_code_commit_and_deployment",
      "tools": ["eslint", "rubocop", "brakeman", "lighthouse", "axe_core"],
      "failure_action": "block_deployment_until_all_validations_pass"
    },
    "manual_validation": {
      "frequency": "weekly_for_critical_systems_monthly_for_others",
      "procedures": ["code_review", "accessibility_testing", "security_review"],
      "failure_action": "create_immediate_remediation_plan_with_timeline"
    },
    "validation_of_validation": {
      "meta_validation": "validate_that_validation_systems_are_working",
      "frequency": "monthly_validation_system_health_check",
      "procedures": ["false_positive_testing", "false_negative_testing"],
      "failure_action": "fix_validation_system_before_resuming_normal_operations"
    }
  },
  
  "resource_limits": {
    "cognitive_header": "§ Explicit Resource Limits and Monitoring",
    "observability_overhead": {
      "maximum_cpu_usage": "10_percent_of_available_cpu",
      "maximum_memory_usage": "1GB_total_for_all_monitoring",
      "maximum_network_bandwidth": "5_percent_of_available_bandwidth",
      "measurement_frequency": "every_10_seconds_with_alerting"
    },
    "storage_limits": {
      "log_retention": "30_days_hot_storage_90_days_warm_7_years_cold",
      "metrics_retention": "7_days_raw_data_1_year_aggregated",
      "maximum_storage_growth": "1GB_per_day_maximum_with_automatic_pruning"
    },
    "enforcement": {
      "hard_limits": "automatic_cutoff_when_limits_exceeded",
      "soft_limits": "warnings_at_80_percent_of_hard_limits",
      "recovery": "automatic_cleanup_oldest_data_first"
    }
  },
  
  "fallback_procedures": {
    "cognitive_header": "§ Fallback Procedures for System Failures",
    "monitoring_failure": {
      "detection": "monitoring_system_health_check_every_60_seconds",
      "fallback": "basic_system_health_checks_only",
      "recovery": "restart_monitoring_with_reduced_functionality"
    },
    "performance_degradation": {
      "detection": "response_time_increase_above_200_percent_baseline",
      "fallback": "disable_non_essential_features_maintain_core_functionality",
      "recovery": "gradual_re_enabling_of_features_with_monitoring"
    },
    "complete_system_failure": {
      "detection": "no_response_for_30_seconds",
      "fallback": "static_error_page_with_contact_information",
      "recovery": "manual_intervention_required_with_incident_response"
    }
  },
<<<<<<< HEAD
  
  "self_optimization": {
    "philosophy": "recursive_cognitive_enhancement_with_mandatory_termination_conditions",
    "optimization_limits": {
      "maximum_iterations": "3_optimization_cycles_maximum",
      "time_limit": "optimization_cycle_cannot_exceed_24_hours",
      "resource_limit": "optimization_cannot_use_more_than_20_percent_system_resources"
    },
    "triggers": {
      "cognitive_overload_detected": {
        "measurement": "working_memory_chunks_exceed_7_for_more_than_300_seconds",
        "action": "reduce_complexity_or_chunk_information_differently"
      },
      "completion_rate_below_95_percent": {
        "measurement_window": "rolling_30_day_period",
        "action": "analyze_failure_patterns_adjust_procedures"
      },
      "performance_degradation": {
        "measurement": "response_time_increase_above_50_percent_baseline_for_24_hours",
        "action": "identify_bottlenecks_optimize_critical_path"
      }
    },
    "forbidden_modifications": [
      "core_principles_engineering_design_communication",
      "extreme_scrutiny_framework_and_enforcement",
      "circuit_breakers_and_safety_mechanisms",
      "resource_limits_and_monitoring_thresholds"
    ],
    "termination_conditions": {
      "success": "all_metrics_within_acceptable_ranges_for_7_consecutive_days",
      "failure": "no_improvement_after_3_optimization_cycles",
      "resource_exhaustion": "optimization_overhead_exceeds_20_percent_system_resources"
    }
=======
  "self_optimization": {
    "philosophy": "surgical_enhancement_preserve_core",
    "triggers": ["performance_degradation", "error_increase", "user_feedback"],
    "forbidden_removals": ["security", "accessibility", "never_truncate", "world_class_standards"],
    "bounded_recursive_enhancement": {
      "enabled": true,
      "limits": {
        "max_iteration_depth": 5,
        "max_enhancement_cycles": 10,
        "max_processing_time": "300_seconds",
        "max_resource_utilization": "80_percent"
      },
      "termination_conditions": {
        "improvement_threshold": "5_percent_minimum",
        "stability_requirement": "3_consecutive_stable_cycles",
        "resource_exhaustion": "automatic_termination",
        "time_limit_exceeded": "graceful_exit"
      },
      "safety_mechanisms": {
        "state_checkpoints": "enabled",
        "rollback_capability": "enabled",
        "circuit_breaker_integration": "enabled",
        "progress_monitoring": "enabled"
      }
    },
    "success_metrics": {
      "completion_rate": "95_percent",
      "satisfaction": "nps_70_plus",
      "quality": "world_class_compliance",
      "performance": "95_plus_lighthouse"
    }
>>>>>>> refs/remotes/origin/main
  }
}