{
  "meta": {
    "version": "v10.6.0",
    "updated": "2025-07-08T20:55:07Z",
    "by": "anon987654321",
    "description": "Self-optimizing project completion system with world-class standards and cognitive framework integration"
  },
  "workflow": {
    "mode_detection": {
      "simple": ["basic_implementation", "single_stack", "minimal_features"],
      "complex": ["business_plan", "design_system", "multi_technology", "visualization", "ai_integration", "async_processing", "browser_automation"]
    },
    "phases": {
      "simple": ["analyze", "build", "verify", "package"],
      "complex": ["empathize_and_analyze", "define_and_design", "ideate_and_architect", "prototype_and_implement", "test_and_validate", "optimize_and_refine", "deliver_and_evolve"]
    },
    "execution": {
      "auto_iterate": true,
      "max_iterations": 3,
      "validation_required": true,
      "ai_enhancement": "enabled"
    }
  },
  "core": {
    "cognitive_framework": {
      "version": "1.0.0",
      "compliance_level": "master",
      "formatting_standards": {
        "indentation": "2_spaces",
        "quotes": "double_quotes",
        "line_length": 120,
        "cognitive_headers": true
      },
      "cognitive_constraints": {
        "max_concepts_per_section": 7,
        "max_nesting_depth": 3,
        "context_switching_threshold": 3,
        "flow_state_protection": true
      },
      "implementation_patterns": {
        "circuit_breaker_required": true,
        "cognitive_load_monitoring": true,
        "attention_restoration": true,
        "working_memory_management": true
      }
    },
    "communication": {
      "style": "strunk_white_accessibility_conscious",
      "format": "essential_only_no_truncation",
      "temperature": {
        "analysis": 0.2,
        "creativity": 0.9,
        "implementation": 0.1,
        "business": 0.4
      }
    },
    "limits": {
      "memory": "unlimited_with_gc",
      "timeout": "unlimited_with_user_control",
      "recursion": "unlimited_with_circuit_breaker"
    },
    "principles": {
      "security": "zero_trust_defense_in_depth",
      "quality": "world_class_standards",
      "accessibility": "wcag_2_2_aaa_compliant",
      "performance": "95_plus_core_web_vitals",
      "formatting": "universal_consistency",
      "preservation": "never_truncate_preserve_logic"
    },
    "multi_perspective": {
      "roles": [
        {"role": "security_expert", "temperature": 0.2, "weight": 0.25},
        {"role": "architect", "temperature": 0.4, "weight": 0.20},
        {"role": "creative_innovator", "temperature": 0.9, "weight": 0.15},
        {"role": "performance_engineer", "temperature": 0.3, "weight": 0.15},
        {"role": "openbsd_specialist", "temperature": 0.3, "weight": 0.15},
        {"role": "rails_expert", "temperature": 0.4, "weight": 0.10}
      ],
      "consensus_threshold": 0.7
    },
    "system_integration": {
      "ai3_system": {
        "cognitive_load_monitoring": "enabled",
        "session_management": "lru_cognitive_aware",
        "query_cache": "ttl_structured_logging",
        "circuit_breakers": "multi_level"
      },
      "rails_ecosystem": {
        "request_complexity_analysis": "enabled",
        "user_session_cognitive_tracking": "enabled",
        "progressive_disclosure": "enabled",
        "flow_state_preservation": "enabled"
      },
      "openbsd_infrastructure": {
        "system_load_cognitive_mapping": "enabled",
        "service_complexity_monitoring": "enabled",
        "automated_cognitive_scaling": "enabled"
      },
      "business_strategy": {
        "decision_complexity_analysis": "enabled",
        "strategic_cognitive_load": "monitored",
        "implementation_chunking": "enabled"
      }
    }
  },
  "stacks": {
    "detection": {
      "rails": ["Gemfile", "config/application.rb", "app/"],
      "ruby": ["*.rb", "Gemfile", "Rakefile"],
      "frontend": ["*.html", "*.css", "*.js", "package.json"],
      "shell": ["*.sh", "*.zsh", "*.bash"],
      "business": ["business_plan", "canvas", "financial_model"],
      "animation": ["babylon.js", "three.js", "d3.js", "svg_animations"],
      "async": ["async", "concurrent", "parallel", "queue"],
      "browser": ["ferrum", "selenium", "playwright", "puppeteer"],
      "scraping": ["nokogiri", "mechanize", "httparty"]
    },
    "templates": {
      "rails": {
        "version": "8.0+",
        "features": ["hotwire", "stimulus", "solid_queue"],
        "security": ["strong_params", "csrf_protection", "pundit"],
        "performance": ["falcon_server", "fragment_caching"]
      },
      "ruby": {
        "version": "3.3+",
        "patterns": ["frozen_string_literal", "yard_docs", "solid_principles"],
        "tools": ["rubocop", "rspec", "bundler"],
        "async": ["async", "concurrent-ruby", "sidekiq"]
      },
      "frontend": {
        "standards": ["html5", "wcag_2.2_aaa", "mobile_first"],
        "performance": ["core_web_vitals_95_plus", "gpu_acceleration"],
        "design": ["golden_ratio", "8px_grid", "modular_scale"]
      },
      "shell": {
        "compatibility": ["posix", "zsh", "openbsd_ksh"],
        "safety": ["set_euo_pipefail", "input_validation"],
        "openbsd": ["pledge_unveil", "doas"]
      }
    }
  },
  "formatting": {
    "universal": {
      "indentation": {"type": "spaces", "size": 2},
      "quotes": "double_quotes_consistent",
      "line_endings": "unix_lf",
      "alignment": "optical_over_mathematical",
      "newlines": "semantic_grouping",
      "cognitive_headers": "enabled"
    },
    "accessibility": {
      "alt_text": "descriptive_contextual",
      "aria_labels": "comprehensive_semantic",
      "heading_hierarchy": "logical_sequential",
      "focus_indicators": "high_contrast_visible",
      "wcag_compliance": "2.2_aaa_required"
    },
    "language_specific": {
      "ruby": {
        "frozen_string_literal": "required",
        "hash_syntax": "symbol_to_proc",
        "method_chaining": "semantic_alignment",
        "async_patterns": "clear_formatting",
        "yard_docs": "required_for_public_methods"
      },
      "javascript": {
        "semicolons": "always",
        "const_let_var": "const_first",
        "async_await": "prefer_over_promises",
        "double_quotes": "enforced"
      },
      "css": {
        "property_ordering": "logical_groups",
        "custom_properties": "semantic_naming",
        "media_queries": "mobile_first",
        "class_naming": "underscore_convention",
        "no_divitis": "semantic_html5_only"
      },
      "shell": {
        "posix_compliance": "required",
        "error_handling": "set_euo_pipefail",
        "input_validation": "mandatory"
      },
      "norwegian_business": {
        "language_support": "nb_NO_required",
        "currency_format": "NOK_standard",
        "legal_compliance": "norwegian_law"
      }
    }
  },
  "design_system": {
    "visual_layout_prompts": {
      "html": {
        "structure": "Use semantic HTML5 elements (header, main, section, footer) with ARIA roles (banner, main, contentinfo) for accessibility. Ensure logical heading hierarchy (h1 for title, h2 for major sections and subsections, h3 for minor subsections) per wcag_2_2_aaa. Avoid inline styles; separate content and presentation. Set lang attribute to match content (e.g., 'nb' for Norwegian).",
        "accessibility": "Include aria-labels for interactive elements and hidden headings for section context. Use role='list' and role='listitem' for custom lists and grids. Ensure all links have rel='noopener' for external URLs.",
        "print": "Optimize for A5 page size with 0.75cm margins. Use page-break-inside: avoid for sections, tables, and lists to prevent truncation. Ensure print output matches screen using print-color-adjust: exact. Test for Chrome PDF output."
      },
      "css": {
        "dry": "Use CSS custom properties (e.g., --text, --gap-large, --font-primary) for all reusable styles (colors, spacing, fonts) to minimize repetition. Define properties in :root and reuse across elements.",
        "typography": "Use calc() and vw for fluid typography scaling between 600px and 800px viewports, per MadeByMike's precise control method (e.g., font-size: calc(15px + (18 - 15) * ((100vw - 600px) / (800 - 600)))). Apply golden ratio (1.618) for font sizes (h1: 32px–42px, h2: 20px–28px, h3: 16px–20px, p: 15px–18px). Use serif fonts for both headings (e.g., Georgia) and body text (e.g., Merriweather) in letters, per Bringhurst 5.1. Set line-height to 1.5–1.65, letter-spacing to 0.02em–0.05em, text-indent to 2em for body text.",
        "typography.fallback": "Provide fallback font sizes in rem units (e.g., 1rem for body, 2rem for h1) for browsers with limited calc() or vw support. Ensure local fonts (e.g., Georgia, Times New Roman) are prioritized over external fonts for reliability.",
        "layout": "Use flexbox for centered, single-column layouts and CSS Grid for responsive lists (auto-fit, minmax(150px, 1fr)). Apply 8pt grid and golden ratio proportions for padding, margins, and gaps (0.5rem, 1rem, 1.618rem, 2rem). Ensure consistent spacing for h2 elements (margin: 2rem 0 1rem) regardless of position within or between sections, using margin collapse to avoid double spacing. Set section margin-top to 0 and lists (ul) margin-bottom to 1.618rem for visual consistency, per Bringhurst 8.1.",
        "content_density": "For dense lists (e.g., >20 items), use CSS Grid with multiple columns (minmax(150px, 1fr)) in screen and print. Ensure minimum 0.5rem gap between items and 1.618rem margin below lists for readability. Split lists across pages in print if needed, using page-break-inside: avoid.",
        "localization": "Ensure proper rendering of Nordic characters (æ, ø, å) with font-family supporting UTF-8. Use hyphens: auto for Norwegian text to enhance readability. Test typography for correct character display in print and screen.",
        "color": "Default to light mode (text: hsl(0, 0%, 10%), background: hsl(0, 0%, 100%)) for print-focused documents like letters. Support dark and high-contrast modes only when explicitly specified. Ensure 7:1 contrast ratio per wcag_2_2_aaa. Use monochrome colors (#000000 text, #FFFFFF background) for print.",
        "accessibility": "Include visible focus indicators (outline: 2px solid). Respect prefers-reduced-motion with no transitions when enabled. Avoid automatic theme switching (e.g., prefers-color-scheme) for letters.",
        "print": "Set @page { size: A5; margin: 0.75cm; }. Use font-size: 12pt for body, 24pt for h1, 18pt for h2, 14pt for h3 in print. Remove backgrounds, use black text, and disable link decorations. Ensure elements avoid page breaks with page-break-inside: avoid. Use print-color-adjust: exact for consistent Chrome PDF output.",
        "error_handling": "Provide fallback fonts (e.g., Georgia, Times New Roman) for unavailable web fonts. Use rem or px units as fallback for calc() failures. Ensure graceful degradation in older browsers (e.g., IE11) by testing fixed font sizes and layout stability.",
        "infrastructure_documentation": "Ensure technical documentation (e.g., letters describing infrastructure) accurately reflects server configurations, including domain counts, application names, and technologies (e.g., OpenBSD, DNSSEC, relayd, falcon, PostgreSQL). Cross-reference with deployment scripts (e.g., openbsd.sh) to verify consistency of domains and apps."
      },
      "svg": {
        "usage": "Use SVG for icons or simple graphics in non-print contexts. Include role='img' and accessible titles. Optimize for performance with minimal paths and efficient compression."
      }
    },
    "principles": ["clarity_over_cleverness", "accessibility_first", "mathematical_foundation"],
    "typography": {
      "scale": "golden_ratio_1618",
      "base_size": "16px",
      "font_stacks": {
        "primary": "-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif",
        "monospace": "'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', monospace"
      },
      "accessibility": {"contrast_ratio": "7:1", "font_size_min": "16px"}
    },
    "color_system": {
      "methodology": "semantic_hsl",
      "accessibility": "wcag_2_2_aaa",
      "modes": ["light", "dark", "high_contrast"]
    },
    "spatial_system": {
      "base_unit": "0.5rem",
      "grid": "8pt_baseline",
      "golden_ratio": "1.618_proportions"
    },
    "motion": {
      "duration": {"fast": "150ms", "normal": "300ms", "slow": "500ms"},
      "easing": "cubic-bezier(0.25, 0.1, 0.25, 1)",
      "accessibility": "respect_prefers_reduced_motion",
      "performance": "60fps_minimum"
    }
  },
  "business_strategy": {
    "framework": "design_thinking_lean_startup_agile",
    "tools": {
      "lean_canvas": "monthly_updates",
      "okr": "quarterly_cycles",
      "design_thinking": "continuous_iteration"
    },
    "localization": {
      "nordic": ["norwegian", "swedish", "danish", "icelandic"],
      "communication": "direct_transparent",
      "currency": "nok_sek_dkk_isk"
    }
  },
  "specialized_capabilities": {
    "visualization": {
      "3d": ["babylon_js", "three_js"],
      "charts": ["d3_js", "interactive_svg"],
      "animation": ["gpu_accelerated", "mathematical_precision"]
    },
    "async_processing": {
      "patterns": ["concurrent_ruby", "async_gem", "actor_model"],
      "security": ["rate_limiting", "resource_limits", "timeout_protection"],
      "monitoring": ["performance_metrics", "error_tracking"]
    },
    "browser_automation": {
      "frameworks": ["ferrum", "selenium", "playwright"],
      "security": ["unveil_restrictions", "pledge_limits", "sandboxing"],
      "performance": ["headless_optimization", "concurrent_sessions"]
    },
    "scraping": {
      "libraries": ["nokogiri", "mechanize", "httparty"],
      "patterns": ["rate_limiting", "retry_mechanisms", "error_recovery"],
      "ethics": ["robots_txt_compliance", "respectful_crawling"]
    }
  },
  "quality_assurance": {
    "gates": {
      "syntax": "no_errors",
      "tests": "90_percent_coverage",
      "security": "zero_trust_a_plus",
      "performance": "95_plus_core_web_vitals",
      "accessibility": "wcag_2_2_aaa",
      "formatting": "universal_consistency"
    },
    "tools": {
      "linting": ["rubocop", "eslint"],
      "testing": ["rspec", "jest", "playwright"],
      "security": ["brakeman", "bundler_audit"],
      "performance": ["lighthouse", "web_vitals"],
      "accessibility": ["axe_core"]
    },
    "ai_enhancement": {
      "code_review": "semantic_analysis",
      "security": "vulnerability_detection",
      "performance": "predictive_analysis",
      "accessibility": "automated_validation"
    }
  },
  "security": {
    "baseline": ["input_validation", "output_encoding", "secure_defaults", "zero_trust"],
    "by_stack": {
      "rails": ["secure_headers", "brakeman", "pundit"],
      "frontend": ["csp_headers", "sri_integrity", "https_only"],
      "shell": ["input_sanitization", "privilege_dropping"],
      "openbsd": ["pledge", "unveil", "doas"],
      "browser": ["sandbox_isolation", "resource_limits"],
      "async": ["rate_limiting", "circuit_breakers"]
    }
  },
  "deployment": {
    "environments": ["development", "staging", "production"],
    "requirements": {
      "docs": ["readme", "setup", "api_docs"],
      "scripts": ["install", "test", "deploy"],
      "configs": ["environment_examples", "monitoring"]
    },
    "monitoring": {
      "health": ["service_status", "resource_usage"],
      "logging": ["error_tracking", "performance_metrics"],
      "alerts": ["service_down", "high_error_rate"]
    }
  },
  "self_optimization": {
    "philosophy": "surgical_enhancement_preserve_core",
    "triggers": ["performance_degradation", "error_increase", "user_feedback"],
    "forbidden_removals": ["security", "accessibility", "never_truncate", "world_class_standards"],
    "success_metrics": {
      "completion_rate": "95_percent",
      "satisfaction": "nps_70_plus",
      "quality": "world_class_compliance",
      "performance": "95_plus_lighthouse"
    }
  }
}