<%= form_with model: post, local: true, multipart: true, class: "needs-validation", novalidate: true do |form| %>
  <% if post.errors.any? %>
    <div class="alert alert-danger" role="alert">
      <h5 class="alert-heading">Please fix the following errors:</h5>
      <ul class="mb-0">
        <% post.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <!-- Title Field -->
  <div class="mb-3">
    <%= form.label :title, class: "form-label fw-semibold" %>
    <%= form.text_field :title, 
          class: "form-control form-control-lg #{'is-invalid' if post.errors[:title].any?}", 
          placeholder: "Enter a compelling title...",
          maxlength: 200,
          required: true %>
    <% if post.errors[:title].any? %>
      <div class="invalid-feedback">
        <%= post.errors[:title].first %>
      </div>
    <% end %>
    <div class="form-text">
      <span id="title-counter">0</span>/200 characters
    </div>
  </div>

  <!-- Content Field -->
  <div class="mb-3">
    <%= form.label :content, class: "form-label fw-semibold" %>
    <%= form.text_area :content, 
          class: "form-control #{'is-invalid' if post.errors[:content].any?}", 
          placeholder: "Share your thoughts, experiences, or insights...",
          rows: 8,
          required: true %>
    <% if post.errors[:content].any? %>
      <div class="invalid-feedback">
        <%= post.errors[:content].first %>
      </div>
    <% end %>
    <div class="form-text">
      <span id="content-counter">0</span> characters â€¢ 
      <span id="reading-time">0</span> min read
    </div>
  </div>

  <!-- Featured Image -->
  <div class="mb-3">
    <%= form.label :featured_image, "Featured Image (optional)", class: "form-label fw-semibold" %>
    <%= form.file_field :featured_image, 
          class: "form-control #{'is-invalid' if post.errors[:featured_image].any?}",
          accept: "image/*" %>
    <% if post.errors[:featured_image].any? %>
      <div class="invalid-feedback">
        <%= post.errors[:featured_image].first %>
      </div>
    <% end %>
    <div class="form-text">
      Upload an image to make your post more engaging (max 5MB, JPG/PNG/WebP)
    </div>
    
    <!-- Image Preview -->
    <div id="image-preview" class="mt-3" style="display: none;">
      <img id="preview-img" src="" alt="Preview" class="img-fluid rounded" style="max-height: 200px;">
      <button type="button" class="btn btn-sm btn-outline-danger mt-2" id="remove-image">
        Remove Image
      </button>
    </div>
  </div>

  <!-- Publish Options -->
  <div class="mb-4">
    <div class="form-check">
      <%= form.check_box :published, { class: "form-check-input", checked: true }, true, false %>
      <%= form.label :published, "Publish immediately", class: "form-check-label" %>
    </div>
    <div class="form-text">
      Uncheck to save as draft (you can publish later from your profile)
    </div>
  </div>

  <!-- Form Actions -->
  <div class="d-flex justify-content-between align-items-center">
    <div class="text-muted small">
      <i class="icon icon-info" aria-hidden="true"></i>
      All posts follow our <a href="#" class="text-decoration-none">community guidelines</a>
    </div>
    
    <div class="d-flex gap-2">
      <%= link_to "Cancel", posts_path, class: "btn btn-outline-secondary" %>
      <%= form.submit post.persisted? ? "Update Post" : "Create Post", 
            class: "btn btn-primary",
            data: { disable_with: "Publishing..." } %>
    </div>
  </div>
<% end %>

<!-- JavaScript for form enhancements -->
<script>
document.addEventListener('DOMContentLoaded', function() {
  const titleField = document.getElementById('post_title');
  const contentField = document.getElementById('post_content');
  const titleCounter = document.getElementById('title-counter');
  const contentCounter = document.getElementById('content-counter');
  const readingTime = document.getElementById('reading-time');
  const imageField = document.getElementById('post_featured_image');
  const imagePreview = document.getElementById('image-preview');
  const previewImg = document.getElementById('preview-img');
  const removeImageBtn = document.getElementById('remove-image');
  
  // Character counting and reading time estimation
  function updateCounters() {
    if (titleField && titleCounter) {
      titleCounter.textContent = titleField.value.length;
    }
    
    if (contentField && contentCounter && readingTime) {
      const contentLength = contentField.value.length;
      const wordCount = contentField.value.trim().split(/\s+/).length;
      const estimatedMinutes = Math.max(1, Math.ceil(wordCount / 200));
      
      contentCounter.textContent = contentLength;
      readingTime.textContent = estimatedMinutes;
    }
  }
  
  // Image preview functionality
  function handleImagePreview() {
    if (imageField && imagePreview && previewImg) {
      imageField.addEventListener('change', function(event) {
        const file = event.target.files[0];
        if (file && file.type.startsWith('image/')) {
          const reader = new FileReader();
          reader.onload = function(e) {
            previewImg.src = e.target.result;
            imagePreview.style.display = 'block';
          };
          reader.readAsDataURL(file);
        }
      });
      
      if (removeImageBtn) {
        removeImageBtn.addEventListener('click', function() {
          imageField.value = '';
          imagePreview.style.display = 'none';
          previewImg.src = '';
        });
      }
    }
  }
  
  // Initialize
  updateCounters();
  handleImagePreview();
  
  // Add event listeners
  if (titleField) titleField.addEventListener('input', updateCounters);
  if (contentField) contentField.addEventListener('input', updateCounters);
});
</script>